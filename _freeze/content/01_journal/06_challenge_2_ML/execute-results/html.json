{
  "hash": "27d46efeb8b95c72d2c6a10fd4c64835",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Ehssan Roshankar\"\n---\n\n\n\n#steps\n1 Build a model\n\n2 Create features with the recipes package\n3 Bundle the model and recipe with the workflow package\n\n4 Evaluate your model with the yardstick package\n\n\n::: {.cell hash='06_challenge_2_ML_cache/html/unnamed-chunk-1_4b98870499b10c60f29428b947df994f'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(tidyverse)\nlibrary(parsnip)\nlibrary(recipes)\nlibrary(rsample)\nlibrary(yardstick)\nlibrary(rpart.plot)\nlibrary(workflows)\nlibrary(modeldata)\n# Read data\nbike_orderlines_tbl <- readRDS(\"bike_orderlines.rds\")\n\nlm_model <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  set_mode(\"regression\")\n\nrecipe_obj <- recipe(total_price ~ ., data = bike_orderlines_tbl) %>%\n  step_rm(order_id,lng,order_line,url,lat) %>%\n  #step_dummy(all_nominal(), one_hot = TRUE) %>%\n  #step_unknown(all_nominal(), -all_outcomes()) %>%\n  #step_normalize(all_numeric()) %>%\n  prep()\n\n\ntrain_data<- bike_orderlines_tbl[1:14000, ]\ntest_data <- bike_orderlines_tbl[14001:15000, ]\n\n\n\nworkflow_obj <- workflow() %>%\n  add_recipe(recipe_obj) %>%\n  add_model(lm_model)\n\nfitted_model <- fit(workflow_obj, data = train_data)\nprint(test_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 1,000 × 18\n#>    order_id order_line order_date          model           model_year category_1\n#>       <dbl>      <dbl> <dttm>              <chr>                <dbl> <chr>     \n#>  1     1762          8 2019-06-11 00:00:00 Aeroad CF SL 7…       2021 Road      \n#>  2     1762          9 2019-06-11 00:00:00 Torque CF 9.0         2019 Mountain  \n#>  3     1762         10 2019-06-11 00:00:00 Neuron:ON WMN …       2020 E-Bikes   \n#>  4     1762         11 2019-06-11 00:00:00 Roadlite 5 WMN        2021 Hybrid / …\n#>  5     1762         12 2019-06-11 00:00:00 Ultimate CF SL…       2020 Road      \n#>  6     1762         13 2019-06-11 00:00:00 Torque CF 9.0         2019 Mountain  \n#>  7     1762         14 2019-06-11 00:00:00 Grail CF SL 8 …       2021 Gravel    \n#>  8     1762         15 2019-06-11 00:00:00 Inflite CF SLX…       2020 Road      \n#>  9     1762         16 2019-06-11 00:00:00 Neuron CF 9 SL        2021 Mountain  \n#> 10     1762         17 2019-06-11 00:00:00 Ultimate WMN C…       2020 Road      \n#> # ℹ 990 more rows\n#> # ℹ 12 more variables: category_2 <chr>, category_3 <chr>, price <dbl>,\n#> #   quantity <dbl>, total_price <dbl>, frame_material <chr>, weight <dbl>,\n#> #   url <chr>, bikeshop <chr>, location <chr>, lat <dbl>, lng <dbl>\n```\n:::\n\n```{.r .cell-code}\n  predict( fitted_model, new_data = test_data) %>%\n\n    bind_cols(test_data %>% select(total_price))%>%\n    \n    \n    yardstick::metrics(truth = total_price, estimate = .pred)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"rmse\",\"2\":\"standard\",\"3\":\"1336.8104495\"},{\"1\":\"rsq\",\"2\":\"standard\",\"3\":\"0.8699216\"},{\"1\":\"mae\",\"2\":\"standard\",\"3\":\"610.9401206\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n#e\n\nend \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}